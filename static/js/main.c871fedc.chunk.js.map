{"version":3,"sources":["components/NavBarMobile.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["PrimarySearchAppBar","state","anchorEl","mobileMoreAnchorEl","styleLogoContainer","display","flexGrow","alignItems","handleProfileMenuOpen","event","_this","setState","currentTarget","handleMenuClose","handleMobileMenuClose","handleMobileMenuOpen","_this$state","this","classes","props","isMenuOpen","Boolean","isMobileMenuOpen","renderMenu","react_default","a","createElement","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","MenuItem_default","onClick","renderMobileMenu","IconButton_default","color","AccountCircle_default","Fragment","AppBar_default","position","className","classNames","appBar","Object","defineProperty","appBarShift","appBarShiftValue","Toolbar_default","disableGutters","aria-label","handleDrawerOpen","menuButton","hide","hideValue","icons_Menu_default","Typography_default","title","variant","noWrap","style","objectSpread","src","process","alt","width","paddingRight","grow","sectionDesktop","aria-owns","undefined","aria-haspopup","fontSize","margin","sectionMobile","MoreVert_default","React","Component","withStyles","theme","root","breakpoints","up","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","concat","enteringScreen","marginRight","inputRoot","inputInput","paddingTop","spacing","unit","paddingBottom","paddingLeft","MiniDrawer","handleDrawerClose","_classNames","_classNames2","_this$props","CssBaseline_default","NavBarMobile","Drawer_default","drawerOpen","drawerClose","paper","toolbar","direction","ChevronRight_default","ChevronLeft_default","Divider_default","List_default","map","text","index","ListItem_default","button","key","ListItemIcon_default","MoveToInbox_default","Mail_default","ListItemText_default","primary","content","paragraph","flexShrink","whiteSpace","overflowX","justifyContent","padding","mixins","withTheme","App","NavBar","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c871fedc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n// import InputBase from '@material-ui/core/InputBase';\n// import Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n// import { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\n// import SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n// import MailIcon from '@material-ui/icons/Mail';\n// import NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    inputRoot: {\n        color: 'inherit',\n        width: '100%',\n    },\n    inputInput: {\n        paddingTop: theme.spacing.unit,\n        paddingRight: theme.spacing.unit,\n        paddingBottom: theme.spacing.unit,\n        paddingLeft: theme.spacing.unit * 10,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: 200,\n        },\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n});\n\nclass PrimarySearchAppBar extends React.Component {\n    state = {\n        anchorEl: null,\n        mobileMoreAnchorEl: null,\n    };\n    styleLogoContainer = {\n        display: 'flex',\n        flexGrow: 1,\n        alignItems: 'center',\n    };\n    // handleDrawerOpen = () => {\n    //     this.setState({ open: true });\n    // };\n\n    // handleDrawerClose = () => {\n    //     this.setState({ open: false });\n    // };\n\n    handleProfileMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n        this.handleMobileMenuClose();\n    };\n\n    handleMobileMenuOpen = event => {\n        this.setState({ mobileMoreAnchorEl: event.currentTarget });\n    };\n\n    handleMobileMenuClose = () => {\n        this.setState({ mobileMoreAnchorEl: null });\n    };\n\n    render() {\n        const { anchorEl, mobileMoreAnchorEl } = this.state;\n        const { classes } = this.props;\n        const isMenuOpen = Boolean(anchorEl);\n        const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n        const renderMenu = (\n            <Menu\n                anchorEl={anchorEl}\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                open={isMenuOpen}\n                onClose={this.handleMenuClose}\n            >\n                <MenuItem onClick={this.handleMenuClose}>Profile</MenuItem>\n                <MenuItem onClick={this.handleMenuClose}>My account</MenuItem>\n                <MenuItem onClick={this.handleMenuClose}>Log out</MenuItem>\n            </Menu>\n        );\n\n        const renderMobileMenu = (\n            <Menu\n                anchorEl={mobileMoreAnchorEl}\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                open={isMobileMenuOpen}\n                onClose={this.handleMobileMenuClose}\n            >\n                \n                <MenuItem onClick={this.handleProfileMenuOpen}>\n                    <IconButton color=\"inherit\">\n                        <AccountCircle />\n                    </IconButton>\n                    <p>John Carter</p>\n                </MenuItem>\n                <MenuItem onClick={this.handleMenuClose}>Profile</MenuItem>\n                <MenuItem onClick={this.handleMenuClose}>My account</MenuItem>\n                <MenuItem onClick={this.handleMenuClose}>Log out</MenuItem>\n            </Menu>\n        );\n\n        return (\n            <>\n                <AppBar position=\"fixed\"\n                    className={classNames(classes.appBar, {\n                        [classes.appBarShift]: this.props.appBarShiftValue,\n                    })}>\n                    <Toolbar disableGutters={this.props.disableGutters}>\n                        <IconButton \n                                    color=\"inherit\" \n                                    aria-label=\"Open drawer\"\n                                    onClick={this.props.handleDrawerOpen}\n                                    className={classNames(classes.menuButton, {\n                                    [classes.hide]: this.props.hideValue})}\n                            >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap style={{ ...this.styleLogoContainer }}>\n                            <img src={process.env.PUBLIC_URL + '/assets/image/walmart.svg'} alt=\"logo\" style={{ width: '50px', paddingRight: '.8rem' }} />\n                            Walmart\n                        </Typography>\n                        {/* <div className={classes.search}>\n                            <div className={classes.searchIcon}>\n                                <SearchIcon />\n                            </div>\n                            <InputBase\n                                placeholder=\"Search…\"\n                                classes={{\n                                    root: classes.inputRoot,\n                                    input: classes.inputInput,\n                                }}\n                            />\n                        </div> */}\n                        <div className={classes.grow}/>\n                        <div className={classes.sectionDesktop}>\n                            <IconButton\n                                aria-owns={isMenuOpen ? 'material-appbar' : undefined}\n                                aria-haspopup=\"true\"\n                                onClick={this.handleProfileMenuOpen}\n                                color=\"inherit\"\n                            >\n                                <div style={{ fontSize:'20px',margin:'0 15px', color:\"white\"}}>\n                                    <p>John Carter</p>\n                                </div>\n                                <AccountCircle />\n                            </IconButton>\n                        </div>\n                        <div className={classes.sectionMobile}>\n                            <IconButton aria-haspopup=\"true\" onClick={this.handleMobileMenuOpen} color=\"inherit\">\n                                <MoreIcon />\n                            </IconButton>\n                        </div>\n                    </Toolbar>\n                </AppBar>\n                {renderMenu}\n                {renderMobileMenu}\n            </>\n        );\n    }\n}\n\nPrimarySearchAppBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PrimarySearchAppBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport NavBarMobile from './NavBarMobile';\nimport Drawer from '@material-ui/core/Drawer';\n// import AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\n// import MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n// import Button from '@material-ui/core/Button';\n\n\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing.unit * 7 + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing.unit * 9 + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n    },\n});\n\nclass MiniDrawer extends React.Component {\n    state = {\n        open: false,\n    };\n\n    // styleLogoContainer = {\n    //     display:'flex',\n    //     flexGrow: 1,\n    //     alignItems:'center',\n    // }\n    // style = {{ flexGrow: 1, }}\n\n    handleDrawerOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleDrawerClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { classes, theme } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <CssBaseline />\n                {/* <AppBar\n                    position=\"fixed\"\n                    className={classNames(classes.appBar, {\n                        [classes.appBarShift]: this.state.open,\n                    })}>\n                    <Toolbar disableGutters={!this.state.open}>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"Open drawer\"\n                            onClick={this.handleDrawerOpen}\n                            className={classNames(classes.menuButton, {\n                                [classes.hide]: this.state.open,\n                            })}>\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap style={{...this.styleLogoContainer}} >\n                            <img src={process.env.PUBLIC_URL + '/assets/image/walmart.svg'} alt=\"logo\" style={{width:'50px', paddingRight:'.8rem'}}/>\n                            Walmart\n                        </Typography>\n                        <Button color=\"inherit\" style={{marginRight:'20px'}}>Log out</Button>\n                    </Toolbar>\n                </AppBar> */}\n                <NavBarMobile \n                            handleDrawerOpen={this.handleDrawerOpen}\n                            disableGutters={!this.state.open}\n                            appBarShiftValue={this.state.open}\n                            hideValue={this.state.open}\n                />\n\n                <Drawer\n                    variant=\"permanent\"\n                    className={classNames(classes.drawer, {\n                        [classes.drawerOpen]: this.state.open,\n                        [classes.drawerClose]: !this.state.open,\n                    })}\n                    classes={{\n                        paper: classNames({\n                            [classes.drawerOpen]: this.state.open,\n                            [classes.drawerClose]: !this.state.open,\n                        }),\n                    }}\n                    open={this.state.open}\n                >\n                    <div className={classes.toolbar}>\n                        <IconButton onClick={this.handleDrawerClose}>\n                            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n                        </IconButton>\n                    </div>\n                    <Divider />\n                    <List>\n                        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                            <ListItem button key={text}>\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                                <ListItemText primary={text} />\n                            </ListItem>\n                        ))}\n                    </List>\n                    <Divider />\n                    <List>\n                        {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                            <ListItem button key={text}>\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                                <ListItemText primary={text} />\n                            </ListItem>\n                        ))}\n                    </List>\n                </Drawer>\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    <Typography paragraph>\n                        Hello\n          </Typography>\n                </main>\n            </div>\n        );\n    }\n}\n\nMiniDrawer.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(MiniDrawer);\n","import React, { Component } from 'react';\nimport NavBar from './components/NavBar';\n// import NavBarMobile from './components/NavBarMobile';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n          <NavBar />\n        {/* <NavBarMobile/> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}